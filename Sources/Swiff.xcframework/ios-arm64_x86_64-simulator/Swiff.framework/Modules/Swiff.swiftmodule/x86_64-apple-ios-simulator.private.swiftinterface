// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Swiff
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import Swiff
import Swift
import _Concurrency
import _StringProcessing
@propertyWrapper public struct Inject<T> {
  public var wrappedValue: T
  public init(_ tag: Swift.String? = nil)
}
public typealias ModuleDeclaration = (Swiff.Container) -> Swift.Void
public struct Container {
  public func single<T>(_ tag: Swift.String? = nil, _ builder: () -> T)
  public func factory<T>(_ tag: Swift.String? = nil, _ builder: @escaping () -> T)
  public func get<T>(_ tag: Swift.String? = nil) -> T
  public func remove<T>(_ tag: Swift.String? = nil, instance: T)
}
public func module(_ container: @escaping Swiff.ModuleDeclaration) -> Swiff.ModuleDeclaration
public func startSwiff(_ modules: Swiff.ModuleDeclaration...)
